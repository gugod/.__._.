[push]
	default = current

[pull]
	ff = only

[log]
	decorate = short

[color]
	ui = false

# non-trivial aliases
[alias]
        amend = commit --amend --no-edit
        b = branch
        bc = branch --contains
        c = ! [[ -z "$1" ]] && git branch --show-current || git checkout $*
        cmmm = commit -m '' --allow-empty-message
        current-branch = branch --show-current
        current-branch = symbolic-ref --short HEAD
        d = diff -W
        detach = ! git checkout $(git rev-parse HEAD)
        ds = diff -W --staged
        l = ! git log --graph --format='%h [%aN] %s' --decorate --first-parent $(git merge-base HEAD master)^..HEAD
        m = merge --strategy-option=patience --no-ff --no-edit
        mpr = ! f() { git merge --no-ff --no-edit origin/pr/$1 }; f;
        mylog = !git log --author $(git config user.email)
        oldest-ancestor = !zsh -c 'diff -u <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | sed -ne \"s/^ //p\" | head -1' -
        pupu = ! git pull --no-edit && git push
        pupu = !git pull --no-ff && git push
        pusho = ! git push -u origin $(git current-branch)
        st = status
        wip = for-each-ref --sort='authordate:iso8601' --format=' %(authordate:relative)%09%(refname:short)' refs/heads
        wipb = for-each-ref --sort='authordate:iso8601' --format=' %(refname:short)' refs/heads
        xb = ! git wipbranches | fzf
        xba = ! git branch | fzf
        xc = ! git checkout $(git wipbranches | fzf)
        xca = ! git checkout $(git branch | fzf)
        xm = ! git merge --no-ff --no-edit $(git wipbranches | fzf)
        xma = ! git merge --no-ff --no-edit $(git branch | fzf)
